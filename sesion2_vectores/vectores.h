/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _VECTORES_H_RPCGEN
#define _VECTORES_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


typedef struct {
	u_int vec_len;
	float *vec_val;
} vec;

struct vectores {
	vec v1;
	vec v2;
};
typedef struct vectores vectores;

struct datosInit {
	int limiteV;
	int rango;
};
typedef struct datosInit datosInit;

struct vectoresSaxpy {
	float numero;
	vec v1;
	vec v2;
};
typedef struct vectoresSaxpy vectoresSaxpy;

#define PROGRAMA 0x20000013
#define VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define initVector 1
extern  vectores * initvector_1(datosInit *, CLIENT *);
extern  vectores * initvector_1_svc(datosInit *, struct svc_req *);
#define sumaVector 2
extern  vec * sumavector_1(vectores *, CLIENT *);
extern  vec * sumavector_1_svc(vectores *, struct svc_req *);
#define productoEscalar 3
extern  float * productoescalar_1(vectores *, CLIENT *);
extern  float * productoescalar_1_svc(vectores *, struct svc_req *);
#define productoVectorial 4
extern  vec * productovectorial_1(vectores *, CLIENT *);
extern  vec * productovectorial_1_svc(vectores *, struct svc_req *);
#define saxpyOperacion 5
extern  vec * saxpyoperacion_1(vectoresSaxpy *, CLIENT *);
extern  vec * saxpyoperacion_1_svc(vectoresSaxpy *, struct svc_req *);
extern int programa_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define initVector 1
extern  vectores * initvector_1();
extern  vectores * initvector_1_svc();
#define sumaVector 2
extern  vec * sumavector_1();
extern  vec * sumavector_1_svc();
#define productoEscalar 3
extern  float * productoescalar_1();
extern  float * productoescalar_1_svc();
#define productoVectorial 4
extern  vec * productovectorial_1();
extern  vec * productovectorial_1_svc();
#define saxpyOperacion 5
extern  vec * saxpyoperacion_1();
extern  vec * saxpyoperacion_1_svc();
extern int programa_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_vec (XDR *, vec*);
extern  bool_t xdr_vectores (XDR *, vectores*);
extern  bool_t xdr_datosInit (XDR *, datosInit*);
extern  bool_t xdr_vectoresSaxpy (XDR *, vectoresSaxpy*);

#else /* K&R C */
extern bool_t xdr_vec ();
extern bool_t xdr_vectores ();
extern bool_t xdr_datosInit ();
extern bool_t xdr_vectoresSaxpy ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_VECTORES_H_RPCGEN */
